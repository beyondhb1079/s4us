# Workflow for validating pull requests
name: Validation

# Triggers the workflow on push or pull request for the main branch
on:
  push:
    branches: [main]
  pull_request:

jobs:
  # Ensure builds succeed
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.modules-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Build app
        run: yarn build --frozen-lockfile

  # Ensure lint checks pass
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.modules-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Lint
        run: yarn lint

  # Ensure Prettier was used
  style:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Install Prettier
        run: yarn global add prettier@~2.4.0
      - name: Style
        run: $(yarn global bin)/prettier --check . || $(yarn global bin)/prettier --write . && git diff --exit-code

  # Ensure tests pass
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.modules-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Cache firebase emulators
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('~/.cache/firebase/emulators/**') }}
        continue-on-error: true
      - name: Run tests
        run: yarn test

  # Ensure Translations are updated
  translations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Install i18next-parser
        run: yarn global add i18next-parser@~6.0.0
      - name: Check translations
        run: $(yarn global bin)/i18next --fail-on-warnings; git diff
      - name: Check translations
        run: $(yarn global bin)/i18next --fail-on-update --fail-on-warnings && echo 'Translations are up to date!' || git diff && exit 1
