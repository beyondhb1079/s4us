# Workflow for validating pull requests
name: Validation

# Triggers the workflow on push or pull request for the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# This workflow is made up of five jobs: dependencies, build, lint, style and test
jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn cache
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline

  build:
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Load dependencies
        uses: actions/cache@v1
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - name: Build app
        run: yarn build --frozen-lockfile

  lint:
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Load dependencies
        uses: actions/cache@v1
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - name: Lint
        run: yarn lint

  style:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Install Prettier
        run: yarn global add prettier
      - name: Style
        run: $(yarn global bin)/prettier --check . || $(yarn global bin)/prettier --write . && git diff --exit-code

  test:
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Load dependencies
        uses: actions/cache@v1
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - name: Run tests
        run: yarn test
